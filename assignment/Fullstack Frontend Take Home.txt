Fullstack Frontend Take Home

We would like you to build an orderbook widget from a live websocket feed from Hyperliquid.
An example of a finished product might look something like below. Please use the same/similar
colors/theme as in this example. Primarily we are looking for good style and liveness, as well as
a demonstrated understanding of what makes a good orderbook display for traders.

Examples:
● Examples of existing trading platforms
○ https://app.hyperliquid.xyz/trade/BTC,
○ https://www.binance.com/en/trade/BTC_USDT?type=spot,
○ https://www.bybit.com/trade/usdt/BTCUSDT

● Hyperliquid has probably one of the better designs, but feel free to add your own
spin/improvements. Looking for clean and responsive designs.

Priorities
● Liveness: the widget should be dynamically updating with new websocket updates
● Smoothness: the orderbook should move smoothly and be pleasant to look at. Prices
can move both very fast and slow and the widget should feel fluid and alive in both.
● Readability: a user should be able to clearly see the current prices and have feedback
mechanisms to know what is changing.
● Information: Order books give subtle information using more than just text, make sure to
pay attention to this as well as add your own ideas.
Websocket endpoint:
● Listen to the websocket for the l2Book at
https://hyperliquid.gitbook.io/hyperliquid-docs/for-developers/api/websocket/subscription
s
● A typescript SDK for the hyperliquid API can also be helpful:
https://github.com/nktkas/hyperliquid
Guidelines:
● Time duration: 3 days
● Support for 2 symbols that can be selected through a drop down, ETH and BTC
● The websocket endpoint has another parameter which is nSigFigs, this will adjust the
precision that the prices are returned at, make sure there is a drop down to
select/change this value.
● Live demo webpage containing the widget that can be shared.
● Code should be committed and shared to github/gitlab.
● Feel free to use any AI tools to help with building. If AI tools are used please make sure
there isn’t excessive or unnecessary bloat in the code.
● Performance is important, excessive re-renders should be avoided.
● Ideally the widget should be written in react/nextjs.